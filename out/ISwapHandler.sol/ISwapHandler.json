{"abi":[{"type":"function","name":"executeSwap","inputs":[{"name":"params","type":"tuple","internalType":"struct ISwapHandler.SwapParams","components":[{"name":"underlyingIn","type":"address","internalType":"address"},{"name":"underlyingOut","type":"address","internalType":"address"},{"name":"mode","type":"uint256","internalType":"uint256"},{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"exactOutTolerance","type":"uint256","internalType":"uint256"},{"name":"payload","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"executeSwap((address,address,uint256,uint256,uint256,uint256,bytes))":"df5def35"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"underlyingIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactOutTolerance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ISwapHandler.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"executeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeSwap((address,address,uint256,uint256,uint256,uint256,bytes))\":{\"params\":{\"params\":\"struct defining the requested trade\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeSwap((address,address,uint256,uint256,uint256,uint256,bytes))\":{\"notice\":\"Execute a trade on the swap handler\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swapHandlers/ISwapHandler.sol\":\"ISwapHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":'@openzeppelin/=lib/openzeppelin-contracts/contracts/'/\",\":'forge-std/=lib/forge-std/'/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/swapHandlers/ISwapHandler.sol\":{\"keccak256\":\"0xf742ac538385c1d19a91a6c88d3cd25de008be1ffaf192e0482f186e7ae88089\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa8d5f0fa0d55ef85e4f4e563e5758176beb464cbecee8bf60aa0f88349ca29a\",\"dweb:/ipfs/QmZ4Xtkqtw2XD3nySqsnfgpxsRGxM7DmXfkC9v6H6pvg3S\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct ISwapHandler.SwapParams","name":"params","type":"tuple","components":[{"internalType":"address","name":"underlyingIn","type":"address"},{"internalType":"address","name":"underlyingOut","type":"address"},{"internalType":"uint256","name":"mode","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"exactOutTolerance","type":"uint256"},{"internalType":"bytes","name":"payload","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"executeSwap"}],"devdoc":{"kind":"dev","methods":{"executeSwap((address,address,uint256,uint256,uint256,uint256,bytes))":{"params":{"params":"struct defining the requested trade"}}},"version":1},"userdoc":{"kind":"user","methods":{"executeSwap((address,address,uint256,uint256,uint256,uint256,bytes))":{"notice":"Execute a trade on the swap handler"}},"version":1}},"settings":{"remappings":["'@openzeppelin/=lib/openzeppelin-contracts/contracts/'/","'forge-std/=lib/forge-std/'/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/swapHandlers/ISwapHandler.sol":"ISwapHandler"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/swapHandlers/ISwapHandler.sol":{"keccak256":"0xf742ac538385c1d19a91a6c88d3cd25de008be1ffaf192e0482f186e7ae88089","urls":["bzz-raw://fa8d5f0fa0d55ef85e4f4e563e5758176beb464cbecee8bf60aa0f88349ca29a","dweb:/ipfs/QmZ4Xtkqtw2XD3nySqsnfgpxsRGxM7DmXfkC9v6H6pvg3S"],"license":"GPL-2.0-or-later"}},"version":1},"ast":{"absolutePath":"contracts/swapHandlers/ISwapHandler.sol","id":16702,"exportedSymbols":{"ISwapHandler":[16701]},"nodeType":"SourceUnit","src":"46:1366:42","nodes":[{"id":16677,"nodeType":"PragmaDirective","src":"46:23:42","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":16701,"nodeType":"ContractDefinition","src":"71:1340:42","nodes":[{"id":16693,"nodeType":"StructDefinition","src":"801:434:42","nodes":[],"canonicalName":"ISwapHandler.SwapParams","documentation":{"id":16678,"nodeType":"StructuredDocumentation","src":"100:696:42","text":"@notice Params for swaps using SwapHub contract and swap handlers\n @param underlyingIn sold token address\n @param underlyingOut bought token address\n @param mode type of the swap: 0 for exact input, 1 for exact output\n @param amountIn amount of token to sell. Exact value for exact input, maximum for exact output\n @param amountOut amount of token to buy. Exact value for exact output, minimum for exact input\n @param exactOutTolerance Maximum difference between requested amountOut and received tokens in exact output swap. Ignored for exact input\n @param payload multi-purpose byte param. The usage depends on the swap handler implementation"},"members":[{"constant":false,"id":16680,"mutability":"mutable","name":"underlyingIn","nameLocation":"837:12:42","nodeType":"VariableDeclaration","scope":16693,"src":"829:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16679,"name":"address","nodeType":"ElementaryTypeName","src":"829:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16682,"mutability":"mutable","name":"underlyingOut","nameLocation":"867:13:42","nodeType":"VariableDeclaration","scope":16693,"src":"859:21:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16681,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16684,"mutability":"mutable","name":"mode","nameLocation":"895:4:42","nodeType":"VariableDeclaration","scope":16693,"src":"890:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16683,"name":"uint","nodeType":"ElementaryTypeName","src":"890:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16686,"mutability":"mutable","name":"amountIn","nameLocation":"956:8:42","nodeType":"VariableDeclaration","scope":16693,"src":"951:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16685,"name":"uint","nodeType":"ElementaryTypeName","src":"951:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16688,"mutability":"mutable","name":"amountOut","nameLocation":"1029:9:42","nodeType":"VariableDeclaration","scope":16693,"src":"1024:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16687,"name":"uint","nodeType":"ElementaryTypeName","src":"1024:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16690,"mutability":"mutable","name":"exactOutTolerance","nameLocation":"1100:17:42","nodeType":"VariableDeclaration","scope":16693,"src":"1095:22:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16689,"name":"uint","nodeType":"ElementaryTypeName","src":"1095:4:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16692,"mutability":"mutable","name":"payload","nameLocation":"1221:7:42","nodeType":"VariableDeclaration","scope":16693,"src":"1215:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16691,"name":"bytes","nodeType":"ElementaryTypeName","src":"1215:5:42","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapParams","nameLocation":"808:10:42","scope":16701,"visibility":"public"},{"id":16700,"nodeType":"FunctionDefinition","src":"1351:58:42","nodes":[],"documentation":{"id":16694,"nodeType":"StructuredDocumentation","src":"1241:105:42","text":"@notice Execute a trade on the swap handler\n @param params struct defining the requested trade"},"functionSelector":"df5def35","implemented":false,"kind":"function","modifiers":[],"name":"executeSwap","nameLocation":"1360:11:42","parameters":{"id":16698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16697,"mutability":"mutable","name":"params","nameLocation":"1392:6:42","nodeType":"VariableDeclaration","scope":16700,"src":"1372:26:42","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$16693_calldata_ptr","typeString":"struct ISwapHandler.SwapParams"},"typeName":{"id":16696,"nodeType":"UserDefinedTypeName","pathNode":{"id":16695,"name":"SwapParams","nameLocations":["1372:10:42"],"nodeType":"IdentifierPath","referencedDeclaration":16693,"src":"1372:10:42"},"referencedDeclaration":16693,"src":"1372:10:42","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$16693_storage_ptr","typeString":"struct ISwapHandler.SwapParams"}},"visibility":"internal"}],"src":"1371:28:42"},"returnParameters":{"id":16699,"nodeType":"ParameterList","parameters":[],"src":"1408:0:42"},"scope":16701,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISwapHandler","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[16701],"name":"ISwapHandler","nameLocation":"81:12:42","scope":16702,"usedErrors":[],"usedEvents":[]}],"license":"GPL-2.0-or-later"},"id":42}